#include<iostream>
using namespace std;
//存储结果
int a[36000] = {0,1};
int main(){
    int n;
    cin>>n;
    //结果长度
    int l = 1;
    //注意:0!=1
    //从1~n,循环乘结果a的每一位(例如，当前i=33,结果a=123,是将123的每一位都×33,然后处理进位,得到当前循环后的结果a)
    for(int i=1; i<= n; i++){
        //对结果a的每一位×i
        for(int j=1; j<=l; j++){
            //当前位×i
            a[j] = a[j]*i;
            //当前位的实际值需要+上一位的进位
            a[j] = a[j-1]/10+a[j];
            //上一位进位后，就只需要保留余数即可，也就是该位实际应该的值
            a[j-1] = a[j-1]%10;
            //如果当前位的值>10,而且j>=结果长度l,说明结果需要进位,需要将结果长度l+1,将当前位向高位进位(也就是继续执行当前for循环)
            if(a[j]>=10 && j>=l) {
                l++;
            }
        }
    }
    //从结果长度l位倒叙输出结果到1的位置(去除0位置的0)
    for(int i=l; i>=1; i--){
        cout<<a[i];
    }
    return 0;
}